name: Build experimental build
permissions:
  contents: write
  actions: read

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main
      - dev
      - develop
  push:
    branches:
      - main
      - dev
      - develop

jobs:
  build_xm_experimental:
    if: |
      github.repository == 'xenia-manager/xenia-manager' &&
      (
        github.ref == 'refs/heads/main' ||
        github.ref == 'refs/heads/dev' ||
        github.ref == 'refs/heads/develop'
      ) &&
      (
        github.event_name == 'workflow_dispatch' ||
        github.event_name == 'push' ||
        (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
      )

    runs-on: windows-latest
    strategy:
      matrix:
        targetplatform: [x64]
        ChannelName: [Release]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore "source/XeniaManager.Desktop/XeniaManager.Desktop.csproj"

      - name: Test
        run: dotnet test "source/XeniaManager.Desktop/XeniaManager.Desktop.csproj"

      - name: Get experimental build version
        id: get_version_info
        shell: pwsh
        run: |
          $currentDate = (Get-Date -Format "yyyy-MM-dd")
          $sha = git log -1 --pretty=%H
          $shortSha = $sha.Substring(0, 7)
          $versionTag = "$currentDate-$shortSha"

          echo "COMMIT_SHA_SHORT=$shortSha" >> $env:GITHUB_ENV
          echo "VERSION_TAG=$versionTag" >> $env:GITHUB_ENV

      - name: Publish the app
        run: dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:EnableCompressionInSingleFile=true -p:DebugType=none -p:PublishReadyToRun=false -p:InformationalVersion="${{ env.VERSION_TAG }}" -p:DefineConstants="EXPERIMENTAL_BUILD" -o publish/desktop "source/XeniaManager.Desktop/XeniaManager.Desktop.csproj"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: xenia_manager
          path: ./publish/desktop/XeniaManager.exe

      - name: Package
        if: github.event_name == 'workflow_dispatch'
        run: |
          Compress-Archive -Path .\publish\desktop\* -DestinationPath .\xenia_manager.zip

      - name: Get latest release from experimental-builds repo
        if: github.event_name == 'workflow_dispatch'
        id: get_latest_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/xenia-manager/experimental-builds/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        continue-on-error: true

      - name: Generate changelog
        if: github.event_name == 'workflow_dispatch'
        id: generate_changelog
        shell: pwsh
        continue-on-error: true
        run: |
          try {
              $latestReleaseTag = ""
              $latestCommitSha = ""
              if ("${{ steps.get_latest_release.outputs.status }}" -eq "200") {
                  $jsonData = @'
          ${{ steps.get_latest_release.outputs.data }}
          '@
                  $releaseData = $jsonData | ConvertFrom-Json
                  $latestReleaseTag = $releaseData.tag_name
                  if ($latestReleaseTag -match '(\d{4}-\d{2}-\d{2})-([a-f0-9]{7})') {
                      $latestCommitSha = $matches[2]
                  }
              }
              $changelog = ""
              if ($latestCommitSha -ne "") {
                  $commits = git log --pretty=format:"%H|%s" "$latestCommitSha..HEAD"
                  if ($commits) {
                      $changelog = "## Changelog`n`n"
                      foreach ($commit in $commits) {
                          if ($commit.Trim() -eq "") { continue }
                          $parts = $commit -split '\|', 2
                          $commitHash = $parts[0]
                          $commitTitle = $parts[1] -replace '\s*\(#\d+\)$', ''
                          if ($commitTitle.Trim() -eq "") { continue }
                          $shortCommitHash = $commitHash.Substring(0, 7)
                          $commitUrl = "https://github.com/${{ github.repository }}/commit/$commitHash"
                          $changelog += "- **$commitTitle** ([$shortCommitHash]($commitUrl))`n"
                      }
                  } else {
                      $changelog = "## Changelog`n`nNo new commits since last release.`n"
                  }
              } else {
                  $changelog = "## Changelog`n`nFirst release or unable to determine previous release.`n"
              }
              $changelog = $changelog.TrimEnd()
          } catch {
              $changelog = ""
          }
          echo "CHANGELOG<<EOF" >> $env:GITHUB_ENV
          echo "$changelog" >> $env:GITHUB_ENV
          echo "EOF" >> $env:GITHUB_ENV

      - name: Check if release exists
        if: github.event_name == 'workflow_dispatch'
        id: check_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/xenia-manager/experimental-builds/releases/tags/${{ env.VERSION_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        continue-on-error: true

      - name: Update commit SHA in experimental-builds repo
        if: github.event_name == 'workflow_dispatch'
        shell: pwsh
        run: |
          git clone https://github.com/xenia-manager/experimental-builds.git temp-repo
          cd temp-repo
          git config user.email "214508751+xeniamanager-ci@users.noreply.github.com"
          git config user.name "xeniamanager-ci"
          echo "${{ env.COMMIT_SHA_SHORT }}" > latest_build_commit.txt
          git add latest_build_commit.txt
          if (git diff --staged --quiet) {
              echo "No changes to commit"
          } else {
              git commit -m "Update latest build commit SHA: ${{ env.COMMIT_SHA_SHORT }}"
              git push https://x-access-token:${{ secrets.REPO_ACCESS_TOKEN }}@github.com/xenia-manager/experimental-builds.git main
          }

      - name: Create new release
        if: github.event_name == 'workflow_dispatch' && steps.check_release.outputs.status != '200'
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: xenia-manager/experimental-builds
          tag_name: ${{ env.VERSION_TAG }}
          name: ${{ env.VERSION_TAG }}
          body: ${{ env.CHANGELOG }}
          make_latest: true
          files: ./xenia_manager.zip